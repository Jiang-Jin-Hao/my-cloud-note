<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.NoteMapper">

    <resultMap id="NoteMap" type="com.example.entity.Note">
        <id column="nid" property="nid"></id>
        <result column="title" property="title"></result>
        <result column="text" property="text"></result>
        <result column="create_time" property="createTime"></result>
        <result column="modified_time" property="modifiedTime"></result>
        <result column="uid" property="uid"></result>
    </resultMap>

    <!--分页查询-->
    <!--where会自动去掉and-->
    <sql id="getNoteListWhere">
        <where>
            <if test="title!=null">
                and title like '%' #{title} '%'
            </if>
            <if test="startTime!=null">
                <![CDATA[
        and #{startTime} <= create_time
    ]]>
            </if>
            <if test="endTime!=null">
                <![CDATA[
        and create_time <= #{endTime}
    ]]>
            </if>
            <if test="true">
                and uid = #{uid}
            </if>
        </where>
    </sql>

    <select id="findAllByUid" parameterType="com.example.vo.NoteQuery" resultMap="NoteMap">
        select *
        from note
        <include refid="getNoteListWhere"></include>
        order by modified_time desc limit #{start},#{limit}
    </select>

    <select id="countAllByUid" parameterType="com.example.vo.NoteQuery" resultType="Integer">
        select count(*)
        from note
        <include refid="getNoteListWhere"></include>
    </select>

    <delete id="delByNid">
        delete
        from note
        where nid = #{nid}
          and uid = #{uid}
    </delete>

    <update id="updateByNidAndUid">
        update note
        set title=#{title},
            text=#{text},
            modified_time=#{modifiedTime}
        where nid = #{nid}
          and uid = #{uid}
    </update>

    <insert id="insertNote" parameterType="com.example.entity.Note">
        insert into note(title, text, uid, create_time, modified_time)
        values (#{title}, #{text}, #{uid}, #{createTime}, #{modifiedTime})
    </insert>

</mapper>